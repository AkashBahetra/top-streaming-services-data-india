name: "Get Top PT Stream Services"

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0,8,12,17 * * *'  # 00:00, 08:00, 12:00, 17:00 todos os dias

jobs:
  build:
    name: Build and Update Tokens
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
      id-token: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          sudo apt-get update && sudo apt-get install -y jq

      - name: Run code quality checks
        run: |
          black --check --line-length 120 --target-version py312 top_pt_stream_services.py
          flake8 top_pt_stream_services.py --max-line-length=120
          bandit -r top_pt_stream_services.py

      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Refresh Netflix Account Token
        id: refresh-netflix
        env:
          REFRESH_TOKEN: ${{ secrets.NETFLIX_REFRESH_TOKEN }}
          CLIENT_ID: ${{ secrets.NETFLIX_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.NETFLIX_CLIENT_SECRET }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          response=$(curl -s --location 'https://api.trakt.tv/oauth/token' \
            --header 'Content-Type: application/json' \
            --data '{
                "refresh_token": "'"$REFRESH_TOKEN"'",
                "client_id": "'"$CLIENT_ID"'",
                "client_secret": "'"$CLIENT_SECRET"'",
                "redirect_uri": "urn:ietf:wg:oauth:2.0:oob",
                "grant_type": "refresh_token"
            }')

          if ! echo "$response" | jq -e .access_token > /dev/null; then
            echo "Error refreshing Netflix token. Response: $response"
            exit 1
          fi

          access_token=$(echo "$response" | jq -r '.access_token')
          refresh_token=$(echo "$response" | jq -r '.refresh_token')

          echo "::add-mask::$access_token"
          echo "::add-mask::$refresh_token"

          {
            echo "netflix_access_token=$access_token"
            echo "netflix_refresh_token=$refresh_token"
          } >> "$GITHUB_OUTPUT"

          gh secret set NETFLIX_ACCESS_TOKEN --body "$access_token"
          gh secret set NETFLIX_REFRESH_TOKEN --body "$refresh_token"

      - name: Refresh Prime Video Account Token
        id: refresh-prime
        env:
          REFRESH_TOKEN: ${{ secrets.PRIME_REFRESH_TOKEN }}
          CLIENT_ID: ${{ secrets.PRIME_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.PRIME_CLIENT_SECRET }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          response=$(curl -s --location 'https://api.trakt.tv/oauth/token' \
            --header 'Content-Type: application/json' \
            --data '{
                "refresh_token": "'"$REFRESH_TOKEN"'",
                "client_id": "'"$CLIENT_ID"'",
                "client_secret": "'"$CLIENT_SECRET"'",
                "redirect_uri": "urn:ietf:wg:oauth:2.0:oob",
                "grant_type": "refresh_token"
            }')

          if ! echo "$response" | jq -e .access_token > /dev/null; then
            echo "Error refreshing Prime token. Response: $response"
            exit 1
          fi

          access_token=$(echo "$response" | jq -r '.access_token')
          refresh_token=$(echo "$response" | jq -r '.refresh_token')

          echo "::add-mask::$access_token"
          echo "::add-mask::$refresh_token"

          {
            echo "prime_access_token=$access_token"
            echo "prime_refresh_token=$refresh_token"
          } >> "$GITHUB_OUTPUT"

          gh secret set PRIME_ACCESS_TOKEN --body "$access_token"
          gh secret set PRIME_REFRESH_TOKEN --body "$refresh_token"

      - name: Refresh Others Account Token
        id: refresh-others
        env:
          REFRESH_TOKEN: ${{ secrets.OTHERS_REFRESH_TOKEN }}
          CLIENT_ID: ${{ secrets.OTHERS_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.OTHERS_CLIENT_SECRET }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          response=$(curl -s --location 'https://api.trakt.tv/oauth/token' \
            --header 'Content-Type: application/json' \
            --data '{
                "refresh_token": "'"$REFRESH_TOKEN"'",
                "client_id": "'"$CLIENT_ID"'",
                "client_secret": "'"$CLIENT_SECRET"'",
                "redirect_uri": "urn:ietf:wg:oauth:2.0:oob",
                "grant_type": "refresh_token"
            }')

          if ! echo "$response" | jq -e .access_token > /dev/null; then
            echo "Error refreshing Others token. Response: $response"
            exit 1
          fi

          access_token=$(echo "$response" | jq -r '.access_token')
          refresh_token=$(echo "$response" | jq -r '.refresh_token')

          echo "::add-mask::$access_token"
          echo "::add-mask::$refresh_token"

          {
            echo "others_access_token=$access_token"
            echo "others_refresh_token=$refresh_token"
          } >> "$GITHUB_OUTPUT"

          gh secret set OTHERS_ACCESS_TOKEN --body "$access_token"
          gh secret set OTHERS_REFRESH_TOKEN --body "$refresh_token"

      - name: Verify All Tokens
        run: |
          echo "Verifying token updates..."
          for token in NETFLIX_ACCESS_TOKEN NETFLIX_REFRESH_TOKEN \
                      PRIME_ACCESS_TOKEN PRIME_REFRESH_TOKEN \
                      OTHERS_ACCESS_TOKEN OTHERS_REFRESH_TOKEN; do
            if ! gh secret list | grep -q $token; then
              echo "Failed to update $token"
              exit 1
            fi
          done
          echo "All tokens verified successfully!"

      - name: Run Python Script
        env:
          # Netflix Account
          NETFLIX_CLIENT_ID: ${{ secrets.NETFLIX_CLIENT_ID }}
          NETFLIX_CLIENT_SECRET: ${{ secrets.NETFLIX_CLIENT_SECRET }}
          NETFLIX_ACCESS_TOKEN: ${{ steps.refresh-netflix.outputs.netflix_access_token }}
          NETFLIX_REFRESH_TOKEN: ${{ steps.refresh-netflix.outputs.netflix_refresh_token }}

          # Prime Video Account
          PRIME_CLIENT_ID: ${{ secrets.PRIME_CLIENT_ID }}
          PRIME_CLIENT_SECRET: ${{ secrets.PRIME_CLIENT_SECRET }}
          PRIME_ACCESS_TOKEN: ${{ steps.refresh-prime.outputs.prime_access_token }}
          PRIME_REFRESH_TOKEN: ${{ steps.refresh-prime.outputs.prime_refresh_token }}

          # Others Account (Hotstar & Zee5)
          OTHERS_CLIENT_ID: ${{ secrets.OTHERS_CLIENT_ID }}
          OTHERS_CLIENT_SECRET: ${{ secrets.OTHERS_CLIENT_SECRET }}
          OTHERS_ACCESS_TOKEN: ${{ steps.refresh-others.outputs.others_access_token }}
          OTHERS_REFRESH_TOKEN: ${{ steps.refresh-others.outputs.others_refresh_token }}

          # Other settings
          KIDS_LIST: ${{ vars.KIDS_LIST }}
          PRINT_LISTS: ${{ vars.PRINT_LISTS }}
        run: |
          # Verify we have all the new access tokens
          for prefix in NETFLIX PRIME OTHERS; do
            if [ -z "${prefix}_ACCESS_TOKEN" ]; then
              echo "${prefix}_ACCESS_TOKEN is empty!"
              exit 1
            fi
          done
          python top_pt_stream_services.py
